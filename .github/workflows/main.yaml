name: My Test Pipeline

on:
  push:
    branches:
      - feature/**
  pull_request:
    branches:
      - "deployment/qas"
      - "deployment/prd"
    types: [opened, reopened, closed]

jobs:
  Work:
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo ${{ github.event.action }}
          echo ${{ github.base_ref }}
      - name: setup env
        id: setup_env
        run: |
          if ${{ contains(github.ref, 'refs/heads/feature') }} ; then
            echo ::set-output name=env::dev
          elif ${{ contains(github.head_ref, 'release/') }} \
                && [ "${{github.base_ref}}" == "deployment/qas" ] \
                && ${{ contains(fromJSON('["opened", "reopened"]'), github.event.action) }} ; then
            echo ::set-output name=env::qas
          elif ${{ contains(github.head_ref, 'release/') }} \
              && [ "${{github.base_ref}}" == "deployment/prd" ] \
              && [ "${{github.event.action}}" == "closed" ] \
              && [ ${{github.event.pull_request.merged}} == true ] ; then
            echo ::set-output name=env::prd
          else
            :
          fi
    outputs:
      env: ${{ steps.setup_env.outputs.env }}

# echo "ENV=prd" >> $GITHUB_ENV

  Deploy:
    runs-on: ubuntu-latest
    needs: Work
    steps:
      - name: get env
        run: echo "ENV=${{needs.Work.outputs.env}}" >> $GITHUB_ENV
      - name: echo env
        run: echo ${{ env.ENV }}